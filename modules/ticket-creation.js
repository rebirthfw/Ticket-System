const config = require(`${process.cwd()}/botconfig/config.json`);
const ee = require(`${process.cwd()}/botconfig/embed.json`);
const {
    MessageEmbed,
    MessageActionRow,
    MessageButton
} = require("discord.js");
const Discord = require("discord.js");
const Data = require(`${process.cwd()}/models/ticket-user`);
const Data2 = require(`${process.cwd()}/models/ticket-guild`);

module.exports = async (client) => {
    const description = {
        name: "Ticket System",
    }
    client.logger(`„Ä¢ Module: Loaded ${description.name}`.bold.green);

    client.on("interactionCreate", async (interaction) => {
        try {

            if (!interaction.guild.me.permissions.has(Discord.Permissions.FLAGS.SEND_MESSAGES)) return;
            if (!interaction.guild.me.permissions.has(Discord.Permissions.FLAGS.USE_EXTERNAL_EMOJIS)) return;
            if (!interaction.guild.me.permissions.has(Discord.Permissions.FLAGS.EMBED_LINKS)) return;

            if (!interaction.isButton()) return;
            if (!["general-help", "bug-report", "order-bot", "staff-apply", "partner-apply", "source-code"].includes(interaction.customId)) return;

            const data2 = await Data2.findOne({
                guildID: interaction.guildId
            })
            if (!data2) {
                new Data2({
                    guildID: interaction.guild.id,
                    index: 0
                }).save()
            }
            let a = data2.index;
            let b = ++a;

            switch (interaction.customId) {
                case "general-help":
                    await interaction.guild.channels.create(`‚è∞-t-${data2.index + 1}-${interaction.user.username}`, {
                        type: 'GUILD_TEXT',
                        parent: config.ticket_category.generalHelp,
                        permissionOverwrites: [{
                            id: interaction.member.id,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: config.ticket_extra.ticket_supporter_role,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: interaction.guild.id,
                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL", "READ_MESSAGE_HISTORY"]
                        }],
                    }).then(async (channel) => {
                        await Data.create({
                            guildID: interaction.guild.id,
                            userID: interaction.user.id,
                            parentID: config.ticket_category.generalHelp,
                            channelID: channel.id,
                            channelIndex: b,
                            closed: false,
                            locked: false,
                            claimed: false
                        })

                        await data2.updateOne({
                            index: b
                        });

                        const GeneralHelpEmbed = new MessageEmbed()
                            .setTitle('__**–ë–∏–ª–µ—Ç –æ—Ç–∫—Ä—ã—Ç!**__')
                            .setDescription(`–ü—Ä–∏–≤–µ—Ç <@${interaction.user.id}>,\n –ü–µ—Ä—Å–æ–Ω–∞–ª –±—É–¥–µ—Ç –∑–¥–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ, –∞ –ø–æ–∫–∞ —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ —Å–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º–µ!`)
                            .setColor(ee.color)
                            .setTimestamp()
                            .setAuthor({
                                name: interaction.guild.name,
                                iconURL: interaction.guild.iconURL({
                                    dynamic: true
                                })
                            });

                        const closeTicket = new MessageActionRow()
                            .addComponents(
                                new MessageButton()
                                .setCustomId('ticket-claim')
                                .setLabel('–û–±—Ä–∞–±–æ—Ç–∞—Ç—å')
                                .setEmoji("903988142347014144")
                                .setStyle('SUCCESS'),
                                new MessageButton()
                                .setCustomId('ticket-lock')
                                .setLabel('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
                                .setEmoji("üîí")
                                .setStyle('SECONDARY'),
                                new MessageButton()
                                .setCustomId('ticket-close')
                                .setLabel('–ó–∞–∫—Ä—ã—Ç—å')
                                .setEmoji("üîê")
                                .setStyle('DANGER'),
                            );
                        channel.send({
                             content: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å <@${interaction.user.id}>,Wait For <@&954245147040817253>`,
                            embeds: [GeneralHelpEmbed],
                            components: [closeTicket]
                        }).then((msg) => msg.pin())

                        interaction.reply({
                            content: `–ë–∏–ª–µ—Ç —Å–æ–∑–¥–∞–Ω: ${channel}`,
                            ephemeral: true
                        })
                    })
                    break;
                case "bug-report":
                    await interaction.guild.channels.create(`‚è∞-t-${data2.index + 1}-${interaction.user.username}`, {
                        type: 'GUILD_TEXT',
                        parent: config.ticket_category.bugReport,
                        permissionOverwrites: [{
                            id: interaction.member.id,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: config.ticket_extra.ticket_supporter_role,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: interaction.guild.id,
                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL", "READ_MESSAGE_HISTORY"]
                        }],
                    }).then(async (channel) => {
                        await Data.create({
                            guildID: interaction.guild.id,
                            userID: interaction.user.id,
                            parentID: config.ticket_category.bugReport,
                            channelID: channel.id,
                            channelIndex: b,
                            closed: false,
                            locked: false,
                            claimed: false
                        })

                        await data2.updateOne({
                            index: b
                        });

                        const BugReportEmbed = new MessageEmbed()
                            .setTitle('__**–ë–∏–ª–µ—Ç –æ—Ç–∫—Ä—ã—Ç! **__')
                            .setDescription(`–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ <@${interaction.user.id}>,\n
–ü–µ—Ä—Å–æ–Ω–∞–ª –±—É–¥–µ—Ç –∑–¥–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ, –∞ –ø–æ–∫–∞ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –æ–± –æ—à–∏–±–∫–µ, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å.`)
                            .setColor(ee.color)
                            .setTimestamp()
                            .setAuthor({
                                name: interaction.guild.name,
                                iconURL: interaction.guild.iconURL({
                                    dynamic: true
                                })
                            });

                        const closeTicket = new MessageActionRow()
                            .addComponents(
                                new MessageButton()
                                .setCustomId('ticket-claim')
                                .setLabel('–ó–∞–±—Ä–∞—Ç—å')
                                .setEmoji("903988142347014144")
                                .setStyle('SUCCESS'),
                                new MessageButton()
                                .setCustomId('ticket-lock')
                                .setLabel('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
                                .setEmoji("üîí")
                                .setStyle('SECONDARY'),
                                new MessageButton()
                                .setCustomId('ticket-close')
                                .setLabel('–ó–∞–∫—Ä—ã—Ç—å')
                                .setEmoji("üîê")
                                .setStyle('DANGER'),
                            );
                        channel.send({
                             content: `–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ <@${interaction.user.id}>, –æ–∂–∏–¥–∞–π—Ç–µ <@&954245147040817253>, <@&954383804003393636>`,
                            embeds: [BugReportEmbed],
                            components: [closeTicket]
                        }).then((msg) => msg.pin())

                        interaction.reply({
                            content: `Ticket has been Created: ${channel}`,
                            ephemeral: true
                        })
                    })
                    break;
                case "order-bot":
                    await interaction.guild.channels.create(`‚è∞-t-${data2.index + 1}-${interaction.user.username}`, {
                        type: 'GUILD_TEXT',
                        parent: config.ticket_category.orderBot,
                        permissionOverwrites: [{
                            id: interaction.member.id,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: config.ticket_extra.ticket_supporter_role,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: interaction.guild.id,
                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL", "READ_MESSAGE_HISTORY"]
                        }],
                    }).then(async (channel) => {
                        await Data.create({
                            guildID: interaction.guild.id,
                            userID: interaction.user.id,
                            parentID: config.ticket_category.orderBot,
                            channelID: channel.id,
                            channelIndex: b,
                            closed: false,
                            locked: false,
                            claimed: false
                        })

                        await data2.updateOne({
                            index: b
                        });

                        const OrderedEmbed = new MessageEmbed()
                            .setTitle('__**–ë–∏–ª–µ—Ç –æ—Ç–∫—Ä—ã—Ç!**__')
                            .setDescription(`–ü—Ä–∏–≤–µ—Ç <@${interaction.user.id}>,\n–ü–µ—Ä—Å–æ–Ω–∞–ª –±—É–¥–µ—Ç –∑–¥–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ, –ø–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —É–∫–∞–∑–∞–Ω–Ω—É—é –Ω–∏–∂–µ!`)
                            .setColor(ee.color)
                            .setTimestamp()
                            .setAuthor({
                                name: interaction.guild.name,
                                iconURL: interaction.guild.iconURL({
                                    dynamic: true
                                })
                            });

                        const OrderedEmbed2 = new MessageEmbed()
                            .setTitle(`‚úÖ __**–ü–†–ï–î–°–¢–ê–í–¨–¢–ï –ò–ù–§–û–†–ú–ê–¶–ò–Æ, –ü–ï–†–ï–ß–ò–°–õ–ï–ù–ù–£–Æ –ù–ò–ñ–ï**__ ‚úÖ`)
                            .setDescription(`> **–î–∞—Ç—É –∏ –≤—Ä–µ–º—è.\n> –ù–µ –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–π, –Ω–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏.\n> –í–∞—à –Ω–∏–∫–Ω–µ–π–º –≤ –∏–≥—Ä–µ (—Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Å –∏–≥—Ä—ã).\n> –ù–∏–∫–Ω–µ–π–º –Ω–∞—Ä—É—à–∏—Ç–µ–ª—Å—è (—Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Å –∏–≥—Ä—ã).**`)
                            .setColor(ee.color)

                        const closeTicket = new MessageActionRow()
                            .addComponents(
                                new MessageButton()
                                .setCustomId('ticket-claim')
                                .setLabel('–ó–∞–±—Ä–∞—Ç—å')
                                .setEmoji("903988142347014144")
                                .setStyle('SUCCESS'),
                                new MessageButton()
                                .setCustomId('ticket-lock')
                                .setLabel('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
                                .setEmoji("üîí")
                                .setStyle('SECONDARY'),
                                new MessageButton()
                                .setCustomId('ticket-close')
                                .setLabel('–ó–∞–∫—Ä—ã—Ç—å')
                                .setEmoji("üîê")
                                .setStyle('DANGER'),
                            );
                        channel.send({
                            content: `–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ <@${interaction.user.id}>,–æ–∂–∏–¥–∞–π—Ç–µ  <@&954245147040817253>, <@&954383355145748530>`,
                            embeds: [OrderedEmbed, OrderedEmbed2],
                            components: [closeTicket]
                        }).then((msg) => msg.pin())

                        interaction.reply({
                            content: `Ticket has been Created: ${channel}`,
                            ephemeral: true
                        })
                    })
                    break;
                case "staff-apply":
                    await interaction.guild.channels.create(`‚è∞-t-${data2.index + 1}-${interaction.user.username}`, {
                        type: 'GUILD_TEXT',
                        parent: config.ticket_category.staffApply,
                        permissionOverwrites: [{
                            id: interaction.member.id,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: config.ticket_extra.ticket_supporter_role,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: interaction.guild.id,
                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL", "READ_MESSAGE_HISTORY"]
                        }],
                    }).then(async (channel) => {
                        await Data.create({
                            guildID: interaction.guild.id,
                            userID: interaction.user.id,
                            parentID: config.ticket_category.staffApply,
                            channelID: channel.id,
                            channelIndex: b,
                            closed: false,
                            locked: false,
                            claimed: false
                        })

                        await data2.updateOne({
                            index: b
                        });

                        const staffApplyEmbed = new MessageEmbed()
                            .setTitle('__**–ë–∏–ª–µ—Ç –æ—Ç–∫—Ä—ã—Ç!**__')
                            .setDescription(`–ü—Ä–∏–≤–µ—Ç <@${interaction.user.id}>,\n–ü–µ—Ä—Å–æ–Ω–∞–ª –±—É–¥–µ—Ç –∑–¥–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.`)
                            .setColor(ee.color)
                            .setTimestamp()
                            .setAuthor({
                                name: interaction.guild.name,
                                iconURL: interaction.guild.iconURL({
                                    dynamic: true
                                })
                            });

                        const staffApplyFormEmbed = new MessageEmbed()
                            .setTitle(`üìú –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ üìú`)
                            .setColor(ee.color)
                            .setDescription(`üìÅ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è | –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º —á—Ç–æ-–Ω–∏–±—É–¥—å –æ —Å–µ–±–µ!
${interaction.user}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –Ω–µ–∫–æ—Ç–æ—Ä—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!
                            
–í–æ–ø—Ä–æ—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å:                           
**> 1). –°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç –∏ –∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?
> 2). –û—Ç–∫—É–¥–∞ –≤—ã / –∫–∞–∫–æ–π –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å?
> 3). –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–µ—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç?
> 4). —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤ –∏–≥—Ä–æ–≤–æ–º –æ–Ω–ª–∞–π–Ω–µ?
> 5). –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –µ—Å–ª–∏ –¥–∞, —Ç–æ –∫–∞–∫–æ–π –∏ —Å–∫–æ–ª—å–∫–æ?
> 6). –ù–∏–∫–Ω–µ–π–º, –∫–ª–∞—Å—Å, —É—Ä–æ–≤–µ–Ω—å –í–∞—à–µ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –∏–≥—Ä–µ.
> 7). –†–∞—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ, –ø–æ—á–µ–º—É –≤—ã –≤–∏–¥–∏—Ç–µ —Å–µ–±—è –Ω–∞ —ç—Ç–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.**
                            
                            
**–ü–†–ò–ú–ï–ß–ê–ù–ò–ï:**
–¶–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –Ω–∞ –±–æ–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —á–∞—Ç–∞ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–º–æ—â—å –∏–≥—Ä–æ–∫–∞–º –≤ –∏–≥—Ä–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö.
–û—Å—Ç–∞–≤–ª—è–π—Ç–µ –í–∞—à–∏ –∑–∞—è–≤–∫–∏, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.`)


                        const closeTicket = new MessageActionRow()
                            .addComponents(
                                new MessageButton()
                                .setCustomId('ticket-claim')
                                .setLabel('–ó–∞–±—Ä–∞—Ç—å')
                                .setEmoji("903988142347014144")
                                .setStyle('SUCCESS'),
                                new MessageButton()
                                .setCustomId('ticket-lock')
                                .setLabel('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
                                .setEmoji("üîí")
                                .setStyle('SECONDARY'),
                                new MessageButton()
                                .setCustomId('ticket-close')
                                .setLabel('–ó–∞–∫—Ä—ã—Ç—å')
                                .setEmoji("üîê")
                                .setStyle('DANGER'),
                            );
                        channel.send({
                             content: `–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ <@${interaction.user.id}>, –æ–∂–∏–¥–∞–π—Ç–µ <@&954245147040817253>, <@&944151445828145152>`,
                            embeds: [staffApplyEmbed, staffApplyFormEmbed],
                            components: [closeTicket]
                        }).then((msg) => msg.pin())

                        interaction.reply({
                            content: `–ë–∏–ª–µ—Ç —Å–æ–∑–¥–∞–Ω: ${channel}`,
                            ephemeral: true
                        })
                    })
                    break;
                case "partner-apply":
                    await interaction.guild.channels.create(`‚è∞-t-${data2.index + 1}-${interaction.user.username}`, {
                        type: 'GUILD_TEXT',
                        parent: config.ticket_category.partnerApply,
                        permissionOverwrites: [{
                            id: interaction.member.id,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: config.ticket_extra.ticket_supporter_role,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: interaction.guild.id,
                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL", "READ_MESSAGE_HISTORY"]
                        }],
                    }).then(async (channel) => {
                        await Data.create({
                            guildID: interaction.guild.id,
                            userID: interaction.user.id,
                            parentID: config.ticket_category.partnerApply,
                            channelID: channel.id,
                            channelIndex: b,
                            closed: false,
                            locked: false,
                            claimed: false
                        })

                        await data2.updateOne({
                            index: b
                        });

                        const embed = new MessageEmbed()
                            .setTitle('__**–ë–∏–ª–µ—Ç –æ—Ç–∫—Ä—ã—Ç!**__')
                            .setDescription(`–ü—Ä–∏–≤–µ—Ç <@${interaction.user.id}>,\n–ü–µ—Ä—Å–æ–Ω–∞–ª –±—É–¥–µ—Ç –∑–¥–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.`)
                            .setColor(ee.color)
                            .setTimestamp()
                            .setAuthor({
                                name: interaction.guild.name,
                                iconURL: interaction.guild.iconURL({
                                    dynamic: true
                                })
                            });

                        const parnerApplyEmbed2 = new MessageEmbed()
                            .setTitle(`‚úÖ __**–ü–û–î–ê–¢–¨ –ó–ê–Ø–í–ö–£ –ù–ê –ü–ê–†–¢–ù–ï–†–°–¢–í–û**__ ‚úÖ`)
                            .setDescription(`> –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º —á—Ç–æ-–Ω–∏–±—É–¥—å –æ —Å–µ–±–µ!
${interaction.user}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –≤–∞—à –≤–∏–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.`)
                            .setColor(ee.color)

                        const closeTicket = new MessageActionRow()
                            .addComponents(
                                new MessageButton()
                                .setCustomId('ticket-claim')
                                .setLabel('–ó–∞–±—Ä–∞—Ç—å')
                                .setEmoji("903988142347014144")
                                .setStyle('SUCCESS'),
                                new MessageButton()
                                .setCustomId('ticket-lock')
                                .setLabel('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
                                .setEmoji("üîí")
                                .setStyle('SECONDARY'),
                                new MessageButton()
                                .setCustomId('ticket-close')
                                .setLabel('–ó–∞–∫—Ä—ã—Ç—å')
                                .setEmoji("üîê")
                                .setStyle('DANGER'),
                            );
                        channel.send({
                             content: `–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ <@${interaction.user.id}>, –æ–∂–∏–¥–∞–π—Ç–µ  <@&954245147040817253>, <@&944151445828145152>`,
                            embeds: [embed, parnerApplyEmbed2],
                            components: [closeTicket]
                        }).then((msg) => msg.pin())

                        interaction.reply({
                            content: `–ë–∏–ª–µ—Ç —Å–æ–∑–¥–∞–Ω: ${channel}`,
                            ephemeral: true
                        })
                    })
                    break;
                case "source-code":
                    await interaction.guild.channels.create(`‚è∞-t-${data2.index + 1}-${interaction.user.username}`, {
                        type: 'GUILD_TEXT',
                        parent: config.ticket_category.sourceCode,
                        permissionOverwrites: [{
                            id: interaction.member.id,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: config.ticket_extra.ticket_supporter_role,
                            allow: ["SEND_MESSAGES", "VIEW_CHANNEL", "ATTACH_FILES", "READ_MESSAGE_HISTORY"],
                        }, {
                            id: interaction.guild.id,
                            deny: ["SEND_MESSAGES", "VIEW_CHANNEL", "READ_MESSAGE_HISTORY"]
                        }],
                    }).then(async (channel) => {
                        await Data.create({
                            guildID: interaction.guild.id,
                            userID: interaction.user.id,
                            parentID: config.ticket_category.sourceCode,
                            channelID: channel.id,
                            channelIndex: b,
                            closed: false,
                            locked: false,
                            claimed: false
                        })

                        await data2.updateOne({
                            index: b
                        });

                        const embed = new MessageEmbed()
                            .setTitle('__**–ë–∏–ª–µ—Ç –Ω–∞ –ø–æ–º–æ—â—å –•–µ–ª–ø–µ—Ä–∞ –æ—Ç–∫—Ä—ã—Ç!**__')
                            .setDescription(`–ü—Ä–∏–≤–µ—Ç <@${interaction.user.id}>,\n–ü–µ—Ä—Å–æ–Ω–∞–ª –±—É–¥–µ—Ç –∑–¥–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ, –∞ –ø–æ–∫–∞ —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ –∏–≥—Ä–µ.`)
                            .setColor(ee.color)
                            .setTimestamp()
                            .setAuthor({
                                name: interaction.guild.name,
                                iconURL: interaction.guild.iconURL({
                                    dynamic: true
                                })
                            });

                        const closeTicket = new MessageActionRow()
                            .addComponents(
                                new MessageButton()
                                .setCustomId('ticket-claim')
                                .setLabel('–ó–∞–±—Ä–∞—Ç—å')
                                .setEmoji("903988142347014144")
                                .setStyle('SUCCESS'),
                                new MessageButton()
                                .setCustomId('ticket-lock')
                                .setLabel('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å')
                                .setEmoji("üîí")
                                .setStyle('SECONDARY'),
                                new MessageButton()
                                .setCustomId('ticket-close')
                                .setLabel('–ó–∞–∫—Ä—ã—Ç—å')
                                .setEmoji("üîê")
                                .setStyle('DANGER'),
                            );
                        channel.send({
                             content: `–ü—Ä–∏–≤–µ—Ç <@${interaction.user.id}>,–æ–∂–∏–¥–∞–π—Ç–µ  <@&954245147040817253>, <@&954383804003393636>`,
                            embeds: [embed],
                            components: [closeTicket]
                        }).then((msg) => msg.pin())

                        interaction.reply({
                            content: `–ë–∏–ª–µ—Ç —Å–æ–∑–¥–∞–Ω:${channel}`,
                            ephemeral: true
                        })
                    })
                    break;
            }
        } catch (err) {
            console.log(err)
        }
    })

    require("./ticket-events/ticket-options")(client);

}

